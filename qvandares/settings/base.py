"""
Django settings for qvandares project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

from decouple import config
from django.urls.base import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    # 'rosetta',
    'geoposition',
    'meta',
    'djmoney_rates',
    'widget_tweaks',
    'social_django',
]
QVA_APPS = [
    'destination.apps.DestinationConfig',
    'images.apps.ImagesConfig',
    'lodging.apps.LodgingConfig',
    'index.apps.IndexConfig',
    'currency',
    'accounts.apps.AccountsConfig',
]
INSTALLED_APPS += THIRD_PARTY_APPS + QVA_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'qvandares.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'qvandares.context_processors.debug',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect'
            ],
        },
    },
]

WSGI_APPLICATION = 'qvandares.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('en', _('English')),
    ('es', _('Spanish')),
    ('fr', _('French')),
    ('de', _('German')),
]
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'  # explicito mejor que implicito
LOCALE_PATHS = (
    os.path.join(BASE_DIR, '../locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, '../static'),
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, '../media')

# geoposition
GEOPOSITION_GOOGLE_MAPS_API_KEY = config('GEOPOSITION_GOOGLE_MAPS_API_KEY')

# django-meta
META_USE_TITLE_TAG = True
# TODO: buscar kaywords relevantes para que salgan site wide.
# tratar que sean palabras adecuadas para encontrar el negocio pero que no sean palabras que usen
#  grandes competidores como booking.com, airbnb.com, tripadvisor, ...
# tambier tratar que los keywords sean en su mayoria de tipo 'body'
META_INCLUDE_KEYWORDS = ['qvandares', 'cuba', 'havana', 'travel', 'hotels']
META_DEFAULT_KEYWORDS = META_INCLUDE_KEYWORDS
META_SITE_NAME = 'qvandares'
META_USE_OG_PROPERTIES = True
META_USE_TWITTER_PROPERTIES = True
META_USE_GOOGLEPLUS_PROPERTIES = True
META_SITE_DOMAIN = 'www.qvandares.com'

# djmoney-rates
DJANGO_MONEY_RATES = {
    'DEFAULT_BACKEND': 'djmoney_rates.backends.OpenExchangeBackend',
    'OPENEXCHANGE_URL': 'http://openexchangerates.org/api/latest.json',
    'OPENEXCHANGE_APP_ID': '3f96d926a73e49e8923e3e9a3daff938',
    'OPENEXCHANGE_BASE_CURRENCY': 'USD',
}
# currency
CURRENCIES = ['USD', 'EUR', 'CUP', 'CUC']
DEFAULT_CURRENCY = 'USD'
CURRENCY_SESSION_KEY = 'currency'

# accounts
LOGOUT_REDIRECT_URL = reverse_lazy('index:home')

# django social auth
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
SOCIAL_AUTH_FACEBOOK_KEY = config('SOCIAL_AUTH_FACEBOOK_KEY')
SOCIAL_AUTH_FACEBOOK_SECRET = config('SOCIAL_AUTH_FACEBOOK_SECRET')

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'accounts.backends.ModelEmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# emailing
# during development, you can configure Django to write e-mails to the
# standard output instead of sending them through an SMTP server
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'my_account@gmail.com'
# EMAIL_HOST_PASSWORD = ''
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
